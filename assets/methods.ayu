// example flow in the vm for this class declaration.
// class c {
//     m1() {}
//     m2() {}
// }
// Instruction             |              Stack
// OP_CLASS                |   | class c |                 global variable
// OP_DEFINE_GLOBAL        |   | null |                    class c gets popped off.
// OP_GET_GLOBAL           |   | class c |                 global variable
// OP_CLOSURE              |   | class c | | func m1 |
// OP_METHOD               |   | class c |                 func m1 gets popped
// OP_CLOSURE              |   | class c | | func m2 |
// OP_METHOD               |   | class c |                 func m2 gets popped
// OP_POP                  |   | null |



// example 2
// class Person {
//   sayName() {
//     // this gets bound to the instance the method was accessed from.
//     print this.name;
//   }
// }
//
// var jane = Person();
// jane.name = "Jane";
//
// // two ways to call a class method.
// jane.sayName();
// var closure = jane.sayName;
// // used as a closure
// closure();

// ex 3
// can declare, access and invoke instance methods.
// class Scone {
//     topping(first, second) {
//         print "Scone with " + first + " and " + second;
//     }
// }
//
// var scone = Scone();
// scone.topping("berries", "cream");
